@model MVCHelpDesk.ViewModel.ViewTaskFile


@Html.HiddenFor(m => m.TaskID, new { id = "TaskID" })

@Styles.Render("~/bundles/KanbanCss")
<div id="contenedor">
    <div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title" id="myModalLabel">@Html.DisplayFor(m => m.Titulo)</h4>
    <label>Estado: @Html.DisplayFor(m => m.status)</label><br />
    <label>Numero del caso: @Html.DisplayFor(m => m.TaskID)</label>
        <label>Numero del caso: @Html.DisplayFor(m => m.UsuarioID)</label>
</div>
<div class="modal-body">

    <div class="container">
        <div class="col-sm-7">
            <div id="div_Titulo">
                <div>
                    <label>Creado por : Iniciales o foto del que creo el requerimiento</label>
                </div>
            </div>
            @* EL DIV PERMITE CAMBIAR DE COLOR Y DEBE SER LLAMADO IGUAL COMO ESTA EN EL MODEL *@
            <div id="div_Descripcion" class="form-group">
                <div>
                    <label>Descripcion del requerimiento</label>
                    @Html.TextAreaFor(m => m.Descripcion, new { Class = "form-control", placeholder = "Descripcion", id = "txtDescripcion", rows = 3 })

                    <label id="Error_Descripcion" class="control-label" for="inputError2"></label>
                </div>
            </div>

            <div class="form-group">


                <div>
                    <label>Archivos adjuntos</label>
                    <input id="FileEdit" name="FileEdit" type="file" multiple>
                </div>

            </div>

            <div>
                <label>Agregar Comentario</label>
                <textarea id="Comentario" class="form-control" name="Comentario" rows="3" placeholder="Comentario"></textarea>
            </div>

            <div id="alert_success_editar" class="alert alert-success" role="alert">Informacion procesada satisfactoriamente</div>
            <div id="alert_danger_editar" class="alert alert-danger" role="alert"></div>
        </div>
        <div class="col-sm-2">
            <h4>Opciones</h4>
            <button type="button" class="btn btn-default btn-block">Asignar</button>
            @*<button type="button" class="btn btn-default btn-block">Crear actividades</button>*@
            @*<button type="button" class="btn btn-default btn-block">Adjuntar</button>*@
            <button type="button" class="btn btn-default btn-block">Fecha de entrega</button>

        </div>
    </div>

</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    <button type="button" class="btn btn-primary">Save changes</button>
</div>
</div>




<script>

    //var url = $('#foo').data('url');
    $('#FileEdit').fileinput({
        uploadUrl: '/file-upload-batch/2',
        language: 'es',
        overwriteInitial: false,
        initialPreviewShowDelete: true,
        uploadAsync: true,
        showCaption: true,
        showPreview: true,
        showRemove: true,
        showUpload: false, // <------ just set this from true to false
        maxFileCount: 3,
        allowedFileExtensions: ['jpg', 'png', 'pdf'],
        initialPreviewAsData: true, // identify if you are sending preview data only and not the raw markup
        initialPreview: [
              @foreach (var item in Model.ruta_virtual)
                {
                  <text>'@Url.Content(item)',</text>

            }

        ],
        initialPreviewConfig: [
           @foreach (var item in Model.IDFiles)
           {
               <text>
                {
                    url: '/OperationsTaks/DeleteImage/',
                    key: @item,//parametro que enviamos via ajax/post para eliminar el archivo
                    extra: { id: @item}//investigar
                },
                </text>
           }

        ],
        initialPreviewFileType: 'image', // image is the default and can be overridden in config below
    });


    editar();
</script>