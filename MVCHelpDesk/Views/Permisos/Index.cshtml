@model IEnumerable<MVCHelpDesk.ViewModel.ViewPermisos>
@{
    SelectList DropRoles = ViewBag.DropRoles;
    SelectList DropUsuario = ViewBag.DropUsuario;
    Layout = "~/Views/Shared/_Layout.cshtml";
    string active = "active";
    string Usuariofade = "";
    string Rolfade = "";
    if (ViewBag.Tab == "1")
    {
        Rolfade = "in active";
    }
    else
    {
        Usuariofade = "in active";
    }
}
<h1>Usuarios creados</h1>

@using (Html.BeginForm("Index", "Permisos", FormMethod.Post, new { @id = "frmIndex", @class = "form-horizontal" }))
{
    <div class="col-sm-6">
        <label>Seleccionar un Rol</label>
        @Html.DropDownList("DropRoles", DropRoles, "Seleccionar", new { @onChange = "DropDownList(1)", @class = "form-control select2-allow-clear" })
    </div>
    <div class="col-sm-6">
        <label>Seleccionar un Usuario</label>
        @Html.DropDownList("DropUsuario", DropUsuario, "Seleccionar", new { @onChange = "DropDownList(2)", @class = "form-control select2-allow-clear" })
    </div>
}
<ul class="nav nav-tabs" role="tablist">

    @if (ViewBag.Tab == "1")
    {
        <li role="presentation" class="@active"><a href="#rol" role="tab" data-toggle="tab">Rol</a></li>
        <li role="presentation"><a href="#usuario" role="tab" data-toggle="tab">usuario</a></li>
    }
    else
    {
        <li role="presentation"><a href="#rol" role="tab" data-toggle="tab">Rol</a></li>
        <li role="presentation" class="@active"><a href="#usuario" role="tab" data-toggle="tab">usuario</a></li>
    }



</ul>
<form class="form-horizontal" id="frmPermisos">
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade @Rolfade" id="rol">
            @* TAB ROL *@


            <table id="tablePermisos" class="table table-striped table-bordered" cellspacing="0">

                @foreach (var varModulo in Model.Select(s => new { s.ModuloID, s.ModuloDescripcion }).Distinct().ToList())
                {
                    <thead style="background-color:#E0F2F1">
                        <tr>
                            <th>@varModulo.ModuloID</th>
                            <th>@varModulo.ModuloDescripcion</th>
                            <th>Rol</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemModel in Model.Where(w => w.ModuloID == varModulo.ModuloID)
.Select(s => new { s.PermisoID, s.PermisoDescripcion, s.CheekRol, s.CheekUsuarios })
.Distinct()
.ToList())
                        {
                            <tr>
                                <td>
                                    <label style="padding-left:20px;">@itemModel.PermisoID</label>
                                </td>
                                <td>
                                    <label style="padding-left:20px;"> @itemModel.PermisoDescripcion</label>
                                </td>
                                <td>
                                    @Html.CheckBox("CheekRol", itemModel.CheekRol, new { data_permiso = itemModel.PermisoID, data_modulo = varModulo.ModuloID })
                                </td>
                                @*<td>
                                        @Html.CheckBox("CheekUsuario", itemModel.CheekUsuarios, new { data_permiso = itemModel.PermisoID, data_modulo = varModulo.ModuloID })
                                    </td>*@
                            </tr>
                        }
                    </tbody>
                }
            </table>
            <button type="submit" id="btnSave" class="btn btn-primary btn-group-lg"><i class="fa fa-save"></i> Guardar</button>


        </div>

        <div role="tabpanel" class="tab-pane fade @Usuariofade" id="usuario">
            @* TAB USUARIO *@
                <table id="tablePermisos" class="table table-striped table-bordered" cellspacing="0">

                    @foreach (var varModulo in Model.Select(s => new { s.ModuloID, s.ModuloDescripcion }).Distinct().ToList())
                {
                        <thead style="background-color:#E0F2F1">
                            <tr>
                                <th>@varModulo.ModuloID</th>
                                <th>@varModulo.ModuloDescripcion</th>
                                <th>Usuario</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var itemModel in Model.Where(w => w.ModuloID == varModulo.ModuloID)
                .Select(s => new { s.PermisoID, s.PermisoDescripcion, s.CheekRol, s.CheekUsuarios })
                .Distinct()
                .ToList())
                            {
                                <tr>
                                    <td>
                                        <label style="padding-left:20px;">@itemModel.PermisoID</label>
                                    </td>
                                    <td>
                                        <label style="padding-left:20px;"> @itemModel.PermisoDescripcion</label>
                                    </td>
                                    <td>
                                        @Html.CheckBox("CheekUsuario", itemModel.CheekUsuarios, new { data_permiso = itemModel.PermisoID, data_modulo = varModulo.ModuloID })
                                    </td>
                                </tr>
                            }
                        </tbody>
                    }
                </table>
                <button type="submit" id="btnSave" class="btn btn-primary btn-group-lg"><i class="fa fa-save"></i> Guardar</button>
        </div>
    </div>
</form>



@Scripts.Render("~/bundles/scriptPermisos")
<script type="text/javascript">
    var permissionObject = [];
    //SE CARGAN LAS VARIABLES, ESTO ES POR SI SE DESEA QUITAR UN PERMISO
    @foreach (var varModulo in Model.Select(s => new { s.ModuloID, s.ModuloDescripcion }).Distinct().ToList()) {
        foreach (var itemModel in Model.Where(w => w.ModuloID == varModulo.ModuloID).Select(s => new { s.PermisoID, s.PermisoDescripcion, s.CheekRol, s.CheekUsuarios }).Distinct().ToList())
        {
            if (itemModel.CheekRol)
            {
                <text>
    permissionObject.push({
        permisoID: @itemModel.PermisoID,
        moduloID: @varModulo.ModuloID,
        IDUsuario: "",
        IDRol: "",
        check:true
    });
    </text>
            }
            if (itemModel.CheekUsuarios)
            {
                <text>
    permissionObject.push({
        UsuarioPermisoID: @itemModel.PermisoID,
        UsuarioModuloID: @varModulo.ModuloID,
        IDUsuario: "",
        IDRol: "",
        check:true
    });
    </text>
            }
        }
    }


    $("input[name='CheekRol']").on('click', function () {
        var permiso = $(this).data("permiso");
        var modulo = $(this).data("modulo");

        if ($(this).is(':checked')) {
            permissionObject.push({
                permisoID: permiso,
                moduloID: modulo,
                IDUsuario: "",
                IDRol: $('#DropRoles').val(),
                check:true
            });
        } else {
            // findIndex NOS PERMITE BUSCAR EL INDICE DEL OBJETO, PASANDOLE LOS VALORES A BUSCAR
            index = permissionObject.findIndex(x => x.permisoID == permiso && x.moduloID == modulo);
            if (index != -1) {

                permissionObject[index].check=false;
                //.splice PERMITE BORRAR EL INDICE DEL OBJETO
                //permissionObject.splice(index, 1);
            }
        }
    });
    $("input[name='CheekUsuario']").on('click', function () {
        var permiso = $(this).data("permiso");
        var modulo = $(this).data("modulo");

        if ($(this).is(':checked')) {
            permissionObject.push({
                UsuarioPermisoID: permiso,
                UsuarioModuloID: modulo,
                IDUsuario: $('#DropUsuario').val(),
                IDRol: "",
                check:true
            });
        } else {
            // findIndex NOS PERMITE BUSCAR EL INDICE DEL OBJETO, PASANDOLE LOS VALORES A BUSCAR
            index = permissionObject.findIndex(x => x.UsuarioPermisoID == permiso && x.UsuarioModuloID == modulo);
            if (index != -1) {
                permissionObject[index].check=false;
                //.splice PERMITE BORRAR EL INDICE DEL OBJETO
                //permissionObject.splice(index, 1);
            }
        }
    });
    $("#frmPermisos").submit(function (e) {
        var myParam = permissionObject;

        myParam = JSON.stringify({ 'list': myParam });
        // myParam = JSON.stringify({ 'list': hola });
        $.ajax({
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            type: 'POST',
            url: '/Permisos/Save',
            data: myParam,
            success: function (data) {
                if (data.success) {

                }
                else {
                    //VA A CAPTURAR TODOS LOS ERRORES ENVIADOS DEL CONTROLADOR
                    $.each(data.Errors, function (key, value) {

                    });
                }
            },
            error: function (data) {
                $('#alert_danger').html(data);
                $('#alert_danger').show("fast");
            },

        });
    });

    function DropDownList(dato) {

        if (dato == "1") {
            document.getElementById('DropUsuario').options.selectedIndex = 0;
        }
        else {
            document.getElementById('DropRoles').options.selectedIndex = 0;

        }
        document.getElementById('frmIndex').submit();
    }


</script>