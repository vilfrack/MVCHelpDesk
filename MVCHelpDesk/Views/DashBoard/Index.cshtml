@model IEnumerable<MVCHelpDesk.ViewModel.ViewDashboard>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/bundles/DataPikerCss")

@*@Scripts.Render("~/bundles/scriptDashBoard")*@
@Scripts.Render("~/bundles/DataPikerJs")
<script src="~/Scripts/plugins/chart.js"></script>
<h2>Index</h2>
<div class="container">
    <div class="row">
        <div class="form-inline">
            <div class="form-group">
                <label>Fecha de Inicio</label>
                <div class="input-group date DivDatapiker" id="div_FechaEntrega">
                    <input type="text" name="fechaInicio" id="fechaInicio" class="form-control">
                    <div class="input-group-addon">
                        <span class="glyphicon glyphicon-th"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label>Fecha de Final</label>
                <div class="input-group date DivDatapiker" id="div_FechaEntrega">
                    <input type="text" name="fechaFinal" id="fechaFinal" class="form-control">
                    <div class="input-group-addon">
                        <span class="glyphicon glyphicon-th"></span>
                    </div>
                </div>
            </div>
            <button type="button" id="btnBuscar" class="btn btn-default">Buscar</button>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <h2>Requerimientos Anuales</h2>
            <div id="DivCantidadTask">
                @*@Html.Action("CantidadTask", "DashBoard")*@
                <div class="col-md-12">
                    <canvas id="CantidadTask" width="800" height="600"></canvas>
                </div>
            </div>

        </div>
        <div class="col-sm-6">
            <h2>Cantidad de Requerimientos Mensual</h2>
            <div>
                <div class="col-md-12">
                    <canvas id="TaskMensuales" width="256" height="175"></canvas>
                </div>
                @*@Html.Action("TaskMensuales", "DashBoard")*@
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <h2>Requerimientos por Desarrollador</h2>
            <div>
                <div class="col-md-12">
                    <canvas id="DesarrolladorTask" width="256" height="175"></canvas>
                </div>
                @*@Html.Action("DesarrolladorTask", "DashBoard")*@
            </div>

        </div>
        <div class="col-sm-6">
            <h2>Requerimientos desarrollados a tiempos</h2>
            <div>
                <div class="col-md-12">
                    <canvas id="DesarrolladorTiempo" width="256" height="175"></canvas>
                </div>
                @*@Html.Action("DesarrolladorTiempo", "DashBoard")*@
            </div>

        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <h2>Requerimientos desarrollados a tiempos</h2>
            @* desempeño*@
            <div>
                @*@Html.Action("TaskTiempo", "DashBoard")*@
            </div>

        </div>
        <div class="col-sm-6">
            @*<h2>Requerimientos desarrollados a tiempos</h2>
                <div>
                    @Html.Action("DesarrolladorTiempo", "DashBoard")
                </div>*@

        </div>
    </div>
</div>
<script>
    $('.DivDatapiker input').datepicker({
        todayBtn: "linked",
        autoclose: true,
        todayHighlight: true
    });
    CantidadTask();
    TaskMensuales();
    DesarrolladorTask();
    DesarrolladorTiempo();
    @{
        int enero, febrero, marzo, abri, mayo, junio, julio, agosto, septiembre, octubre, noviembre, diciembre = 0;

     }
    function CantidadTask() {
        var ctx = document.getElementById("CantidadTask").getContext('2d');
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
                datasets: [{
                    label: "Rechazados",
                    backgroundColor: "#E57373",
                    data: @foreach (var item in Model.Where(w => w.statusNombre == "Rechazados").ToList())
                          {
                                <text>
                                [
                                     @item.enero,@item.febrero,@item.marzo,@item.abril,@item.mayo,@item.junio,@item.julio,@item.agosto,@item.septiembre,@item.octubre,@item.noviembre,@item.diciembre
                                ],
                                </text>
                           }
                }, {
                    label: "Asignados",
                    backgroundColor: "#03A9F4",
                    data: @foreach (var item in Model.Where(w => w.statusNombre == "Asignado").ToList())
                            {
                                <text>
                                [
                                        @item.enero,@item.febrero,@item.marzo,@item.abril,@item.mayo,@item.junio,@item.julio,@item.agosto,@item.septiembre,@item.octubre,@item.noviembre,@item.diciembre
                                ],
                                </text>
                            }
                }, {
                    label: "En desarrollo",
                    backgroundColor: "#B3E5FC",
                    data: @foreach (var item in Model.Where(w => w.statusNombre == "Desarrollo").ToList())
                            {
                                <text>
                                [
                                        @item.enero,@item.febrero,@item.marzo,@item.abril,@item.mayo,@item.junio,@item.julio,@item.agosto,@item.septiembre,@item.octubre,@item.noviembre,@item.diciembre
                                ],
                                </text>
                            }
                },{
                    label: "Realizados",
                    backgroundColor: "#81C784",
                    data: @foreach (var item in Model.Where(w => w.statusNombre == "Realizados").ToList())
                            {
                                <text>
                                [
                                        @item.enero,@item.febrero,@item.marzo,@item.abril,@item.mayo,@item.junio,@item.julio,@item.agosto,@item.septiembre,@item.octubre,@item.noviembre,@item.diciembre
                                ],
                                </text>
                            }
                }],

            },
        });
    }

    function TaskMensuales() {
        var ctxx = $("#TaskMensuales").get(0).getContext("2d");
        var datos = {
            labels: ['Asignados', 'Desarrollo', 'Finalizados', 'Rechazados'],
            datasets: [{
                label: 'point',
                //data: [10, 20, 30, 15],
                 data: @foreach (var item in Model.Select(s=> new { s.TotalAsignado,s.TotalDesarrollo,s.TotalRealizado,s.TotalRechazado }).Distinct().ToList())
                 {
                                <text>
                                [
                                        @item.TotalAsignado,@item.TotalDesarrollo,@item.TotalRealizado,@item.TotalRechazado
                                ],
                                </text>
                            }
                backgroundColor: ['#03A9F4', '#B3E5FC', '#81C784', '#E57373']
            }],
        };
        var myDoughnutChart = new Chart(ctxx, {
            type: 'doughnut',
            data: datos,
            options: {
                animation: {
                    animateScale: true
                }
            }
        });
    }

    function DesarrolladorTask() {
        var ctxx = $("#DesarrolladorTask").get(0).getContext("2d");
        var datos = {
            labels: ['Asignados', 'Desarrollo', 'Finalizados', 'Rechazados'],
            datasets: [{
                label: 'point',
                data: [10, 20, 30, 15],
                backgroundColor: ['#03A9F4', '#B3E5FC', '#81C784', '#E57373']
            }],
        };
        var myDoughnutChart = new Chart(ctxx, {
            type: 'doughnut',
            data: datos,
            options: {
                animation: {
                    animateScale: true
                }
            }
        });
    }

    function DesarrolladorTiempo() {
        var ctxx = $("#DesarrolladorTiempo").get(0).getContext("2d");
        var datos = {
            labels: ['Asignados', 'Desarrollo', 'Finalizados', 'Rechazados'],
            datasets: [{
                label: 'point',
                data: [10, 20, 30, 15],
                backgroundColor: ['#03A9F4', '#B3E5FC', '#81C784', '#E57373']
            }],
        };
        var myDoughnutChart = new Chart(ctxx, {
            type: 'doughnut',
            data: datos,
            options: {
                animation: {
                    animateScale: true
                }
            }
        });
    }

</script>
